/*!
 * Luniverse Elements v3.4
 * ECMAScript 2017 template processor
 * Licensed under the MIT license
 * Copyright (c) 2019 Lukas Jans
 * https://github.com/luniverse/elements
 */
class Elements{get open(){return this.escape(this.config.open||this.constructor.open||"{{")}get close(){return this.escape(this.config.close||this.constructor.close||"}}")}set open(e){this.config.open=e}set close(e){this.config.close=e}constructor(e={}){this.config=e}context(e,t){e:for(let r of t){if("."==e)return r;for(const t of e.split("."))if(void 0===(r=r[t]))continue e;return r}}escape(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}empty(e){return!(e instanceof Function||e instanceof Date)&&(e instanceof Object?!Object.keys(e).length:!e)}clean(e){const t=new RegExp(this.open+"!.+?"+this.close,"g");return e.replace(t,"").replace(/[\r\n\t]/g,"")}static render(e,t){return(new this).render(e,t)}render(e,t={}){const r=this.renderRecursive(e,[t]);return this.clean(r)}renderSections(e,t){const r=new RegExp(this.open+"(\\^|#)(.+?)"+this.close+"((?:\\s|\\S)+?)"+this.open+"/\\2"+this.close,"g");return e.replace(r,(e,r,n,s)=>{const o=this.context(n,t);return"#"!=r||this.empty(o)?"^"==r&&this.empty(o)?this.renderRecursive(s,t):"":this.renderRecursive(s,t,o)})}renderPlaceholders(e,t){const r=new RegExp(this.open+"([\\w\\.]+?)"+this.close,"g");return e.replace(r,(e,r)=>{const n=this.context(r,t);return"string"==typeof n||"number"==typeof n?n:e})}renderRecursive(e,t,r){const n=t.slice(0);return void 0!==r&&n.unshift(r),n[0]instanceof Function?n[0](e):n[0]instanceof Array&&n[0].length?this.renderArray(e,n):n[0]instanceof Date?this.renderDate(e,n):(e=this.renderSections(e,n),e=this.renderPlaceholders(e,n))}renderArray(e,t){return t[0].map(r=>this.renderRecursive(e,t,r)).join("")}renderDate(e,t){const r=t[0];return this.renderRecursive(e,t,{d:r.getDate().toString().padStart(2,0),j:r.getDate(),w:r.getDay(),m:(r.getMonth()+1).toString().padStart(2,0),n:r.getMonth()+1,Y:r.getFullYear(),G:r.getHours(),H:r.getHours().toString().padStart(2,0),i:r.getMinutes().toString().padStart(2,0),s:r.getSeconds().toString().padStart(2,0)})}}